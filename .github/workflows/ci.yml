name: Continuous Integration

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Use Ubuntu as the operating system for the job

    steps:
      # Checkout the repository to the runner
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Docker Buildx for multi-platform builds (optional but recommended)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Build the Docker image using docker-compose
      - name: Build Docker Image
        run: docker-compose -f ./Docker-compose.yml build

      # Start containers in detached mode
      - name: Start Docker Containers
        run: docker-compose -f ./Docker-compose.yml up -d

      # Wait for SQL Server to initialize (adjust time as necessary)
      - name: Wait for SQL Server
        run: sleep 30s  # Adjust as needed based on your application's startup time

      # Execute entrypoint script inside SQL Server container
      - name: Execute Entry Point Script
        run: docker-compose -f ./Docker-compose.yml exec -T sqlserver /bin/bash -c '/scripts/entrypoint.sh'

      # Perform additional steps if needed, such as publishing test results or artifacts

      # Stop and clean up the Docker containers after tests
      - name: Stop Docker Containers
        run: docker-compose -f ./Docker-compose.yml down
